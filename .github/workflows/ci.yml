name: CI

on:
  push:
    branches: [ master, feature/** ]
  pull_request:
    branches: [ master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: mediweb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Maven test
        working-directory: MediWeb_Backend
        run: ./mvnw -q test
      - name: Maven package
        if: success()
        working-directory: MediWeb_Backend
        run: ./mvnw -q -DskipTests package

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: MediWeb_Frontend/package-lock.json
      - name: Install deps
        working-directory: MediWeb_Frontend
        run: npm ci
      - name: Lint & typecheck
        working-directory: MediWeb_Frontend
        run: npm run lint && npm run typecheck
      - name: Run tests
        working-directory: MediWeb_Frontend
        run: npm test -- --watchAll=false
      - name: Build web
        working-directory: MediWeb_Frontend
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build backend image
        run: docker build -t mediweb-backend:ci MediWeb_Backend
      - name: Build frontend image
        run: docker build -t mediweb-frontend:ci MediWeb_Frontend

  security-scan:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4
      - name: Install Trivy
        uses: aquasecurity/trivy-action@v0.20.0
        with:
          scan-type: 'config'
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'
      - name: Scan backend image
        uses: aquasecurity/trivy-action@v0.20.0
        with:
          image-ref: 'mediweb-backend:ci'
          format: 'table'
          ignore-unfixed: true
          exit-code: '0'
      - name: Scan frontend image
        uses: aquasecurity/trivy-action@v0.20.0
        with:
          image-ref: 'mediweb-frontend:ci'
          format: 'table'
          ignore-unfixed: true
          exit-code: '0'
